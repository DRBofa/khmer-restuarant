{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/vireak/Desktop/meteor/app/client/App.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/vireak/Desktop/meteor/app/client/App.vue","filename":"/home/vireak/Desktop/meteor/app/client/App.vue","passPerPreset":false,"envName":"development","cwd":"/home/vireak/Desktop/meteor/app","root":"/home/vireak/Desktop/meteor/app","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/vireak/Desktop/meteor/app/client/App.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/vireak/Desktop/meteor/app/client/App.vue"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar seed = [{\n  name: 'Frozen Yogurt',\n  calories: 159,\n  fat: 6.0,\n  carbs: 24,\n  protein: 4.0,\n  sodium: 87,\n  calcium: '14%',\n  iron: '1%'\n}, {\n  name: 'Ice cream sandwich',\n  calories: 237,\n  fat: 9.0,\n  carbs: 37,\n  protein: 4.3,\n  sodium: 129,\n  calcium: '8%',\n  iron: '1%'\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 23,\n  protein: 6.0,\n  sodium: 337,\n  calcium: '6%',\n  iron: '7%'\n}, {\n  name: 'Cupcake',\n  calories: 305,\n  fat: 3.7,\n  carbs: 67,\n  protein: 4.3,\n  sodium: 413,\n  calcium: '3%',\n  iron: '8%'\n}, {\n  name: 'Gingerbread',\n  calories: 356,\n  fat: 16.0,\n  carbs: 49,\n  protein: 3.9,\n  sodium: 327,\n  calcium: '7%',\n  iron: '16%'\n}, {\n  name: 'Jelly bean',\n  calories: 375,\n  fat: 0.0,\n  carbs: 94,\n  protein: 0.0,\n  sodium: 50,\n  calcium: '0%',\n  iron: '0%'\n}, {\n  name: 'Lollipop',\n  calories: 392,\n  fat: 0.2,\n  carbs: 98,\n  protein: 0,\n  sodium: 38,\n  calcium: '0%',\n  iron: '2%'\n}, {\n  name: 'Honeycomb',\n  calories: 408,\n  fat: 3.2,\n  carbs: 87,\n  protein: 6.5,\n  sodium: 562,\n  calcium: '0%',\n  iron: '45%'\n}, {\n  name: 'Donut',\n  calories: 452,\n  fat: 25.0,\n  carbs: 51,\n  protein: 4.9,\n  sodium: 326,\n  calcium: '2%',\n  iron: '22%'\n}, {\n  name: 'KitKat',\n  calories: 518,\n  fat: 26.0,\n  carbs: 65,\n  protein: 7,\n  sodium: 54,\n  calcium: '12%',\n  iron: '6%'\n}];\nvar seedSize = seed.length;\nvar data = [];\n\nvar _loop = function (i) {\n  data = data.concat(seed.map(function (r, j) {\n    return _objectSpread({}, r, {\n      index: i * seedSize + j + 1\n    });\n  }));\n};\n\nfor (var i = 0; i < 1000; i++) {\n  _loop(i);\n}\n\nObject.freeze(data);\nmodule.exportDefault({\n  data: function () {\n    return {\n      columns: [{\n        name: 'desc',\n        required: true,\n        label: 'Dessert (100g serving)',\n        align: 'left',\n        field: function (row) {\n          return row.name;\n        },\n        format: function (val) {\n          return \"\" + val;\n        },\n        sortable: true\n      }, {\n        name: 'calories',\n        align: 'center',\n        label: 'Calories',\n        field: 'calories',\n        sortable: true\n      }, {\n        name: 'fat',\n        label: 'Fat (g)',\n        field: 'fat',\n        sortable: true,\n        style: 'width: 10px'\n      }, {\n        name: 'carbs',\n        label: 'Carbs (g)',\n        field: 'carbs'\n      }, {\n        name: 'protein',\n        label: 'Protein (g)',\n        field: 'protein'\n      }, {\n        name: 'sodium',\n        label: 'Sodium (mg)',\n        field: 'sodium'\n      }, {\n        name: 'calcium',\n        label: 'Calcium (%)',\n        field: 'calcium',\n        sortable: true,\n        sort: function (a, b) {\n          return parseInt(a, 10) - parseInt(b, 10);\n        }\n      }, {\n        name: 'iron',\n        label: 'Iron (%)',\n        field: 'iron',\n        sortable: true,\n        sort: function (a, b) {\n          return parseInt(a, 10) - parseInt(b, 10);\n        }\n      }],\n      pagination: {\n        rowsPerPage: 0\n      },\n      data: data\n    };\n  },\n  mounted: function () {\n    this.$refs.table.$refs.virtScroll.scrollTo(5000);\n  }\n});","map":{"version":3,"sources":["/home/vireak/Desktop/meteor/app/client/App.vue"],"names":["_objectSpread","module","link","default","v","seed","name","calories","fat","carbs","protein","sodium","calcium","iron","seedSize","length","data","i","concat","map","r","j","index","Object","freeze","exportDefault","columns","required","label","align","field","row","format","val","sortable","style","sort","a","b","parseInt","pagination","rowsPerPage","mounted","$refs","table","virtScroll","scrollTo"],"mappings":"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","sourcesContent":["\n\nconst seed = [\n  {\n    name: 'Frozen Yogurt',\n    calories: 159,\n    fat: 6.0,\n    carbs: 24,\n    protein: 4.0,\n    sodium: 87,\n    calcium: '14%',\n    iron: '1%'\n  },\n  {\n    name: 'Ice cream sandwich',\n    calories: 237,\n    fat: 9.0,\n    carbs: 37,\n    protein: 4.3,\n    sodium: 129,\n    calcium: '8%',\n    iron: '1%'\n  },\n  {\n    name: 'Eclair',\n    calories: 262,\n    fat: 16.0,\n    carbs: 23,\n    protein: 6.0,\n    sodium: 337,\n    calcium: '6%',\n    iron: '7%'\n  },\n  {\n    name: 'Cupcake',\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    sodium: 413,\n    calcium: '3%',\n    iron: '8%'\n  },\n  {\n    name: 'Gingerbread',\n    calories: 356,\n    fat: 16.0,\n    carbs: 49,\n    protein: 3.9,\n    sodium: 327,\n    calcium: '7%',\n    iron: '16%'\n  },\n  {\n    name: 'Jelly bean',\n    calories: 375,\n    fat: 0.0,\n    carbs: 94,\n    protein: 0.0,\n    sodium: 50,\n    calcium: '0%',\n    iron: '0%'\n  },\n  {\n    name: 'Lollipop',\n    calories: 392,\n    fat: 0.2,\n    carbs: 98,\n    protein: 0,\n    sodium: 38,\n    calcium: '0%',\n    iron: '2%'\n  },\n  {\n    name: 'Honeycomb',\n    calories: 408,\n    fat: 3.2,\n    carbs: 87,\n    protein: 6.5,\n    sodium: 562,\n    calcium: '0%',\n    iron: '45%'\n  },\n  {\n    name: 'Donut',\n    calories: 452,\n    fat: 25.0,\n    carbs: 51,\n    protein: 4.9,\n    sodium: 326,\n    calcium: '2%',\n    iron: '22%'\n  },\n  {\n    name: 'KitKat',\n    calories: 518,\n    fat: 26.0,\n    carbs: 65,\n    protein: 7,\n    sodium: 54,\n    calcium: '12%',\n    iron: '6%'\n  }\n]\n\nconst seedSize = seed.length\n\nlet data = []\nfor (let i = 0; i < 1000; i++) {\n  data = data.concat(seed.map((r, j) => ({ ...r, index: i * seedSize + j + 1 })))\n}\nObject.freeze(data)\n\nexport default {\n  data () {\n    return {\n      columns: [\n        {\n          name: 'desc',\n          required: true,\n          label: 'Dessert (100g serving)',\n          align: 'left',\n          field: row => row.name,\n          format: val => `${val}`,\n          sortable: true\n        },\n        { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\n        { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true, style: 'width: 10px' },\n        { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\n        { name: 'protein', label: 'Protein (g)', field: 'protein' },\n        { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\n        { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\n        { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\n      ],\n\n      pagination: {\n        rowsPerPage: 0\n      },\n\n      data\n    }\n  },\n\n  mounted () {\n    this.$refs.table.$refs.virtScroll.scrollTo(5000)\n  }\n}\n\n"]},"sourceType":"module","hash":"0a0724458fcec013eaabaa9771d7a9815f641fde"}
